#unit tests  {cards, winningHand}
games = [
    {[1,2,3,4,5,6,7,8,9,10], 1}, 
    {[40,1,38,12,48,35,43,30,15,28], 1},
    {[40,1,38,12,48,35,43,30,15,29], 2}, 
    {[1,2,14,30,27,45,40,10,13,52], 1}, 
    {[2,15,3,16,4,17,5,18,1,19], 2}, 
    {[1, 27, 14, 40, 52, 6, 45, 8, 29, 10], 1},
    {[1, 27, 40, 14, 52, 3, 45, 32, 29, 26], 1},
    {[27, 12, 39, 13, 37, 1, 38, 10, 36, 11], 1},
    {[31, 37, 45, 51, 17, 23, 3, 9, 28, 34], 2},
    {[29, 27, 43, 13, 15, 38, 1, 24, 18, 49], 2},
    {[24, 40, 22, 48, 44, 8, 27, 32, 6, 23], 1},
    {[24, 16, 43, 27, 50, 11, 17, 49, 19, 45], 1},
    {[28, 33, 34, 31, 52, 30, 3, 39, 17, 40], 2},
    {[13, 9, 42, 29, 52, 20, 48, 47, 16, 27], 1},
    {[25, 1, 15, 12, 7, 45, 17, 44, 35, 29], 2},
    {[39, 27, 12, 21, 19, 18, 11, 23, 13, 44], 1},
    {[16, 23, 1, 36, 45, 41, 22, 11, 32, 47], 2},
    {[36, 31, 22, 39, 23, 25, 30, 45, 46, 3], 1},
    {[29, 21, 19, 39, 24, 43, 10, 28, 1, 5], 1},
    {[35, 48, 6, 1, 31, 17, 21, 30, 40, 29], 2},
    {[43, 36, 27, 24, 1, 3, 9, 33, 4, 32], 1},
    {[32, 25, 38, 24, 34, 39, 44, 2, 31, 42], 1},
    {[24, 40, 22, 48, 44, 8, 27, 32, 6, 23], 1},
    {[32, 16, 31, 44, 40, 4, 28, 43, 8, 3], 2},
    {[27, 5, 1, 49, 37, 16, 17, 15, 24, 25], 1},
    {[16, 18, 17, 37, 11, 52, 38, 50, 49, 40], 2},
    {[47, 19, 41, 51, 18, 27, 32, 7, 11, 46], 2},
    {[51, 10, 7, 49, 43, 52, 9, 8, 24, 4], 2},
    {[4, 31, 34, 3, 49, 23, 13, 33, 25, 5], 2},
    {[33, 52, 46, 38, 15, 18, 16, 44, 50, 51], 2},
    {[33, 19, 22, 9, 7, 20, 17, 18, 16, 36], 1},
    {[50, 34, 47, 17, 35, 52, 19, 21, 49, 16], 2},
    {[33, 38, 26, 14, 27, 42, 3, 52, 34, 11], 2},
    {[1, 26, 23, 18, 45, 36, 8, 49, 13, 12], 2}

]

testFunc = fn({intList,winnerInt}) ->
    IO.puts(Tester.dealTest(intList, winnerInt))
    IO.inspect Poker.deal(intList), charlists: :as_lists
end
Enum.each(games, testFunc)